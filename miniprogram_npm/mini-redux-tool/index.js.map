{"version":3,"sources":["index.js","utils\\index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["var __TEMP__ = require('./utils/index');var reduxContext = __REQUIRE_DEFAULT__(__TEMP__);\n\nexports.createStore = reduxContext.createStore;\nexports.subscribe = reduxContext.subscribe;\nexports.unsubscribe = reduxContext.unsubscribe;\nexports.dispath = reduxContext.dispath;\nexports.getState = reduxContext.getState;\nexports.redux = reduxContext.redux;\nexports.clearState = reduxContext.clearState;\n","exports.createStore = createStore;\nexports.subscribe = subscribe;\nexports.unsubscribe = unsubscribe;\nexports.dispath = dispath;\nexports.getState = getState;\nexports.clearState = clearState;\n\nexports.redux = Behavior({\n  lifetimes: {\n    attached() {\n      subscribe(this.__wxExparserNodeId__, this.updateData, this);\n      this.updateData.call(this, true);\n    },\n    detached() {\n      unsubscribe(this.__wxExparserNodeId__);\n    }\n  },\n\n  definitionFilter(defFields) {\n    var selector = defFields.selector;\n    if (!selector) {\n      throw new Error(\"no selector function\");\n    }\n\n    if (!defFields.methods) {\n      defFields.methods = {};\n    }\n    defFields.methods._selector = selector;\n\n    if (defFields.componentDidUpdate) {\n      defFields.methods._componentDidUpdate = defFields.componentDidUpdate;\n    }\n  },\n\n  methods: {\n    updateData(isPageCome) {\n      const pageData = this._selector(state);\n      this.setData(pageData);\n\n      if (!isPageCome) {\n        if (this._componentDidUpdate) {\n          if (preState) {\n            this._componentDidUpdate(this._selector(preState));\n          } else {\n            this._componentDidUpdate({});\n          }\n        }\n      }\n    }\n  }\n});\n\nlet preState, state;\nlet listeners = [];\nlet reducers, sagas;\nlet action = {};\n\nfunction createStore(reducer, saga) {\n  reducers = reducer;\n  sagas = saga || undefined;\n  state = updateStore(reducers, preState);\n}\n\nfunction getState() {\n  return JSON.parse(JSON.stringify(state));\n}\n\nfunction subscribe(id, listener, that) {\n  let bol = true;\n  for (let i in listeners) {\n    if (listeners[i].id === id) {\n      bol = false;\n      break;\n    }\n  }\n  bol && listeners.push({ id, listener, that });\n}\n\nfunction unsubscribe(id) {\n  let idx = -1;\n  for (let i in listeners) {\n    if (listeners[i].id === id) {\n      idx = +i;\n      break;\n    }\n  }\n\n  idx !== -1 && listeners.splice(idx, 1);\n}\n\nfunction dispath(_action) {\n  action = _action;\n  preState = state;\n  state = updateStore(reducers, preState);\n  console.log(\n    \"prev state:\",\n    preState,\n    \"\" + \"\\n\",\n    _action,\n    \"\" + \"\\n\",\n    \"next state:\",\n    state\n  );\n  notify();\n  handleSagas();\n}\n\nfunction notify() {\n  listeners.forEach(child => child.listener.call(child.that));\n}\n\nfunction handleSagas() {\n  if (sagas) {\n    if (sagas[action.type]) {\n      sagas[action.type].forEach(cb => cb(state, action));\n    }\n  }\n}\n\nfunction updateStore(reducer, state) {\n  const res = {};\n  for (let i in reducer) {\n    if (typeof reducer[i] === \"function\") {\n      if (state && state[i]) {\n        res[i] = reducer[i](action, state[i]);\n      } else {\n        res[i] = reducer[i](action);\n      }\n    } else {\n      if (state && state[i]) {\n        res[i] = updateStore(reducer[i], state[i]);\n      } else {\n        res[i] = updateStore(reducer[i]);\n      }\n    }\n  }\n  return res;\n}\n\nfunction clearState() {\n  preState = state;\n  action = {};\n  state = updateStore(reducers);\n  notify();\n}\n"]}